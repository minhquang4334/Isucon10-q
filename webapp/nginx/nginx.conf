user www-data;
worker_processes 1; # autoにしたら、コア数と同じ数まで増やすが、Isuconならただ1コアのCPUしか提供してくれないので、1にしても問題ない
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
worker_rlimit_nofile 60000; # worker_connectionsの4倍 程度


error_log /home/isucon/isuumo/logs/error.log error; # errorログパース設定

events {
    worker_connections 4096;
    multi_accept on; 
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # tcp
    tcp_nopush  on; # nginxはデフォルトでファイルを送り出す際にsendfileシステムコールを使いますが、sendfileの前に動くHTTPヘッダのパケット書き出しを遅延させ、ヘッダとファイルの中身を一度に送り出すように調整します
    tcp_nodelay on;

    # log
    log_format main "time:$time_local"
    "\thost:$remote_addr"
    "\tforwardedfor:$http_x_forwarded_for"
    "\treq:$request"
    "\tmethod:$request_method"
    "\turi:$request_uri"
    "\tstatus:$status"
    "\tsize:$body_bytes_sent"
    "\treferer:$http_referer"
    "\tua:$http_user_agent"
    "\treqtime:$request_time"
    "\truntime:$upstream_http_x_runtime"
    "\tapptime:$upstream_response_time"
    "\tcache:$upstream_http_x_cache"
    "\tvhost:$host";

    access_log  /home/isucon/isuumo/logs/access.log  main;

    # Proxy cache 設定。使いどころがあれば。1mでkey8,000個。1gまでcache。
    # proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=zone1:1m max_size=1g inactive=1h;
    # proxy_temp_path  /var/cache/nginx/tmp;
    
    # Use nginx like load balancer
    #upstream app {
    #  least_conn; # リクエストが少ないサーバーまで整理する
    #  server 127.0.0.1;
    #  server server_2_private_ip;
    #}

    # gzip
    client_max_body_size 10m;
    open_file_cache max=100 inactive=65s;
    client_body_buffer_size     8k;
    client_header_buffer_size   8k;
    large_client_header_buffers 4 64k;
    gzip              on;
    gzip_types        text/plain text/xml text/css application/xml application/xhtml+xml application/rss+xml application/atom_xml text/javascript application/javascript application/x-javascript application/json;
    gzip_disable      "msie6" "Mozilla/4";
    gzip_http_version 1.0;  # HTTP/1.0もgzip圧縮の対象とする
    gzip_vary         on;   # Accept-Encodingレスポンスヘッダを追加
    gzip_proxied      any;  # プロキシ経由でもgzip圧縮を有効にする
    gzip_buffers      4 8k; # gzip圧縮で使用するバッファサイズ（4 8k は 4 x 8k = 32k という意味）
    gzip_min_length   1100; # gzip圧縮する最小データサイズ
    sendfile        on;
    keepalive_timeout  125;
    keepalive_requests 500; # 1接続中に何回のリクエストまで受けるかの設定nginxのデフォルトは100しかないため
    server_tokens off;

    server {
        root /www/data;
        listen 80 default_server;
        listen [::]:80 default_server;


        if ( $http_user_agent ~ (Mediapartners-ISUCON|ISUCONCoffee|isubot|Isupider) ) {
          return 503;
        }


        if ( $http_user_agent ~ /ISUCONbot(-Mobile)?/ ) {
          return 503;
        }

        if ( $http_user_agent ~ /ISUCONFeedSeeker(Beta)?/ ) {
          return 503;
        }

        if ( $http_user_agent ~ /Isupider(-image)?\+/ ) {
          return 503;
        }

        # こちら、Isuconの問題により修正する必要
        # Loadbalancingが必要なら、こちらを修正
        location /api {
          proxy_pass http://localhost:1323;
        }

        location /initialize {
          proxy_pass http://localhost:1323;
        }

        location / {
          root /www/data;
        }
    }
}
